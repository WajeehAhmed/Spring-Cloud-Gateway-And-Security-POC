server.port=8083
spring.application.name=API-GATEWAY
eureka.client.service-url.defaultZone=http://${EUREKA_HOST:localhost}:9000/eureka
spring.config.import=optional:configserver:http://${CONFIG_SERVER:localhost}:8084

# --- THE BOTTOM TWO PROPERTIES ENABLE GATEWAY TO USE EUREKA TO LOCATE MICROSERVICES ---
#spring.cloud.gateway.discovery.locator.enabled=true
#spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# --- Manual Mapping ---
spring.cloud.gateway.routes[0].id = user-get-put-delete
# lb : load balancer UserService : application name in respective microservice application properties file
spring.cloud.gateway.routes[0].uri = lb://UserService
# -- Predicates are boolean conditions
spring.cloud.gateway.routes[0].predicates[0] = Path=/UserService/users/**
spring.cloud.gateway.routes[0].predicates[1]=Method=GET,PUT,DELETE
spring.cloud.gateway.routes[0].predicates[2]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[0].filters[0] = RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[0].filters[1]=AuthorizationHeaderFilter
spring.cloud.gateway.routes[0].filters[2] = RewritePath=/UserService/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[1].id = user-login
spring.cloud.gateway.routes[1].uri = lb://UserService
spring.cloud.gateway.routes[1].predicates[0] = Path=/UserService/login
spring.cloud.gateway.routes[1].predicates[1] = Method=POST
spring.cloud.gateway.routes[1].filters[0] = RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[1].filters[1]=RewritePath=/UserService/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[2].id = user-signup
spring.cloud.gateway.routes[2].uri = lb://UserService
spring.cloud.gateway.routes[2].predicates[0] = Path=/UserService/users
spring.cloud.gateway.routes[2].predicates[1] = Method=POST
spring.cloud.gateway.routes[2].filters[0] = RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[2].filters[1]=RewritePath=/UserService/(?<segment>.*), /$\{segment}


#token.secret=rjBlp2ZbesjgxjyKJFPpI1jWR4GpqDSDNyoBY0R0rRbMqPCm4fHrlmKAwVPvnq0b
